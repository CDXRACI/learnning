ARM GAS  /tmp/ccqcVTR6.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB135:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccqcVTR6.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccqcVTR6.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_TIM1_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c ****  HAL_TIM_PWM_Start (& htim1, TIM_CHANNEL_1);
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE (& htim1, TIM_CHANNEL_1, 250);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c ****   /* USER CODE END 3 */
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief System Clock Configuration
 109:Core/Src/main.c ****   * @retval None
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** void SystemClock_Config(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 132:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccqcVTR6.s 			page 4


 146:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 154:Core/Src/main.c ****   * @param None
 155:Core/Src/main.c ****   * @retval None
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c **** static void MX_TIM1_Init(void)
 158:Core/Src/main.c **** {
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 165:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 166:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 167:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 172:Core/Src/main.c ****   htim1.Instance = TIM1;
 173:Core/Src/main.c ****   htim1.Init.Prescaler = 100-1;
 174:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 175:Core/Src/main.c ****   htim1.Init.Period = 99;
 176:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 177:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 178:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 179:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 184:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 193:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 194:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 195:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 200:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 201:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 202:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
ARM GAS  /tmp/ccqcVTR6.s 			page 5


 203:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 204:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 205:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 206:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 211:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 212:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 213:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 214:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 215:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 216:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 217:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 218:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 219:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 220:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 221:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 222:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 223:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 230:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief GPIO Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_GPIO_Init(void)
 240:Core/Src/main.c **** {
  28              		.loc 1 240 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 241:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 241 3 view .LVU1
  41              		.loc 1 241 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/ccqcVTR6.s 			page 6


  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 242:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 243:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  48              		.loc 1 246 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 246 3 view .LVU4
  51              		.loc 1 246 3 view .LVU5
  52 0010 174B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F02002 		orr	r2, r2, #32
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 246 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F02002 		and	r2, r2, #32
  59 0020 0092     		str	r2, [sp]
  60              		.loc 1 246 3 view .LVU7
  61 0022 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 246 3 view .LVU8
 247:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  64              		.loc 1 247 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 247 3 view .LVU10
  67              		.loc 1 247 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F00402 		orr	r2, r2, #4
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 247 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F00402 		and	r2, r2, #4
  74 0032 0192     		str	r2, [sp, #4]
  75              		.loc 1 247 3 view .LVU13
  76 0034 019A     		ldr	r2, [sp, #4]
  77              	.LBE5:
  78              		.loc 1 247 3 view .LVU14
 248:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 248 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 248 3 view .LVU16
  82              		.loc 1 248 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 248 3 view .LVU18
  87 003e DB6C     		ldr	r3, [r3, #76]
  88 0040 03F00103 		and	r3, r3, #1
  89 0044 0293     		str	r3, [sp, #8]
  90              		.loc 1 248 3 view .LVU19
  91 0046 029B     		ldr	r3, [sp, #8]
  92              	.LBE6:
  93              		.loc 1 248 3 view .LVU20
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccqcVTR6.s 			page 7


 251:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  94              		.loc 1 251 3 view .LVU21
  95 0048 2246     		mov	r2, r4
  96 004a 2021     		movs	r1, #32
  97 004c 4FF09040 		mov	r0, #1207959552
  98 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 254:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 100              		.loc 1 254 3 view .LVU22
 101              		.loc 1 254 23 is_stmt 0 view .LVU23
 102 0054 2023     		movs	r3, #32
 103 0056 0393     		str	r3, [sp, #12]
 255:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 255 3 is_stmt 1 view .LVU24
 105              		.loc 1 255 24 is_stmt 0 view .LVU25
 106 0058 0123     		movs	r3, #1
 107 005a 0493     		str	r3, [sp, #16]
 256:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 256 3 is_stmt 1 view .LVU26
 109              		.loc 1 256 24 is_stmt 0 view .LVU27
 110 005c 0594     		str	r4, [sp, #20]
 257:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 111              		.loc 1 257 3 is_stmt 1 view .LVU28
 112              		.loc 1 257 25 is_stmt 0 view .LVU29
 113 005e 0694     		str	r4, [sp, #24]
 258:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 114              		.loc 1 258 3 is_stmt 1 view .LVU30
 115 0060 03A9     		add	r1, sp, #12
 116 0062 4FF09040 		mov	r0, #1207959552
 117 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL1:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 261:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 262:Core/Src/main.c **** }
 119              		.loc 1 262 1 is_stmt 0 view .LVU31
 120 006a 08B0     		add	sp, sp, #32
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 8
 123              		@ sp needed
 124 006c 10BD     		pop	{r4, pc}
 125              	.L4:
 126 006e 00BF     		.align	2
 127              	.L3:
 128 0070 00100240 		.word	1073876992
 129              		.cfi_endproc
 130              	.LFE135:
 132              		.section	.text.Error_Handler,"ax",%progbits
 133              		.align	1
 134              		.global	Error_Handler
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	Error_Handler:
 140              	.LFB136:
ARM GAS  /tmp/ccqcVTR6.s 			page 8


 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /* USER CODE END 4 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 270:Core/Src/main.c ****   * @retval None
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c **** void Error_Handler(void)
 273:Core/Src/main.c **** {
 141              		.loc 1 273 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ Volatile: function does not return.
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 274:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 275:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 276:Core/Src/main.c ****   __disable_irq();
 147              		.loc 1 276 3 view .LVU33
 148              	.LBB7:
 149              	.LBI7:
 150              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqcVTR6.s 			page 9


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /tmp/ccqcVTR6.s 			page 10


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
ARM GAS  /tmp/ccqcVTR6.s 			page 11


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /tmp/ccqcVTR6.s 			page 12


 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 151              		.loc 2 207 27 view .LVU34
 152              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 153              		.loc 2 209 3 view .LVU35
 154              		.syntax unified
 155              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 156 0000 72B6     		cpsid i
 157              	@ 0 "" 2
 158              		.thumb
 159              		.syntax unified
 160              	.L6:
 161              	.LBE8:
 162              	.LBE7:
 277:Core/Src/main.c ****   while (1)
 163              		.loc 1 277 3 discriminator 1 view .LVU36
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****   }
 164              		.loc 1 279 3 discriminator 1 view .LVU37
 277:Core/Src/main.c ****   while (1)
 165              		.loc 1 277 9 discriminator 1 view .LVU38
 166 0002 FEE7     		b	.L6
 167              		.cfi_endproc
 168              	.LFE136:
 170              		.section	.text.MX_TIM1_Init,"ax",%progbits
 171              		.align	1
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	MX_TIM1_Init:
 177              	.LFB134:
 158:Core/Src/main.c **** 
 178              		.loc 1 158 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 112
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 9CB0     		sub	sp, sp, #112
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 120
 164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 190              		.loc 1 164 3 view .LVU40
 164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 191              		.loc 1 164 26 is_stmt 0 view .LVU41
 192 0004 0024     		movs	r4, #0
 193 0006 1894     		str	r4, [sp, #96]
 194 0008 1994     		str	r4, [sp, #100]
 195 000a 1A94     		str	r4, [sp, #104]
 196 000c 1B94     		str	r4, [sp, #108]
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/ccqcVTR6.s 			page 13


 197              		.loc 1 165 3 is_stmt 1 view .LVU42
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 198              		.loc 1 165 27 is_stmt 0 view .LVU43
 199 000e 1594     		str	r4, [sp, #84]
 200 0010 1694     		str	r4, [sp, #88]
 201 0012 1794     		str	r4, [sp, #92]
 166:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 202              		.loc 1 166 3 is_stmt 1 view .LVU44
 166:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 203              		.loc 1 166 22 is_stmt 0 view .LVU45
 204 0014 0E94     		str	r4, [sp, #56]
 205 0016 0F94     		str	r4, [sp, #60]
 206 0018 1094     		str	r4, [sp, #64]
 207 001a 1194     		str	r4, [sp, #68]
 208 001c 1294     		str	r4, [sp, #72]
 209 001e 1394     		str	r4, [sp, #76]
 210 0020 1494     		str	r4, [sp, #80]
 167:Core/Src/main.c **** 
 211              		.loc 1 167 3 is_stmt 1 view .LVU46
 167:Core/Src/main.c **** 
 212              		.loc 1 167 34 is_stmt 0 view .LVU47
 213 0022 3422     		movs	r2, #52
 214 0024 2146     		mov	r1, r4
 215 0026 01A8     		add	r0, sp, #4
 216 0028 FFF7FEFF 		bl	memset
 217              	.LVL2:
 172:Core/Src/main.c ****   htim1.Init.Prescaler = 100-1;
 218              		.loc 1 172 3 is_stmt 1 view .LVU48
 172:Core/Src/main.c ****   htim1.Init.Prescaler = 100-1;
 219              		.loc 1 172 18 is_stmt 0 view .LVU49
 220 002c 2D48     		ldr	r0, .L21
 221 002e 2E4B     		ldr	r3, .L21+4
 222 0030 0360     		str	r3, [r0]
 173:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 223              		.loc 1 173 3 is_stmt 1 view .LVU50
 173:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 224              		.loc 1 173 24 is_stmt 0 view .LVU51
 225 0032 6323     		movs	r3, #99
 226 0034 4360     		str	r3, [r0, #4]
 174:Core/Src/main.c ****   htim1.Init.Period = 99;
 227              		.loc 1 174 3 is_stmt 1 view .LVU52
 174:Core/Src/main.c ****   htim1.Init.Period = 99;
 228              		.loc 1 174 26 is_stmt 0 view .LVU53
 229 0036 8460     		str	r4, [r0, #8]
 175:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 230              		.loc 1 175 3 is_stmt 1 view .LVU54
 175:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 231              		.loc 1 175 21 is_stmt 0 view .LVU55
 232 0038 C360     		str	r3, [r0, #12]
 176:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 233              		.loc 1 176 3 is_stmt 1 view .LVU56
 176:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 234              		.loc 1 176 28 is_stmt 0 view .LVU57
 235 003a 0461     		str	r4, [r0, #16]
 177:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 236              		.loc 1 177 3 is_stmt 1 view .LVU58
 177:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccqcVTR6.s 			page 14


 237              		.loc 1 177 32 is_stmt 0 view .LVU59
 238 003c 4461     		str	r4, [r0, #20]
 178:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 239              		.loc 1 178 3 is_stmt 1 view .LVU60
 178:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 240              		.loc 1 178 32 is_stmt 0 view .LVU61
 241 003e 8461     		str	r4, [r0, #24]
 179:Core/Src/main.c ****   {
 242              		.loc 1 179 3 is_stmt 1 view .LVU62
 179:Core/Src/main.c ****   {
 243              		.loc 1 179 7 is_stmt 0 view .LVU63
 244 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 245              	.LVL3:
 179:Core/Src/main.c ****   {
 246              		.loc 1 179 6 view .LVU64
 247 0044 0028     		cmp	r0, #0
 248 0046 41D1     		bne	.L15
 183:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 249              		.loc 1 183 3 is_stmt 1 view .LVU65
 183:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 250              		.loc 1 183 34 is_stmt 0 view .LVU66
 251 0048 4FF48053 		mov	r3, #4096
 252 004c 1893     		str	r3, [sp, #96]
 184:Core/Src/main.c ****   {
 253              		.loc 1 184 3 is_stmt 1 view .LVU67
 184:Core/Src/main.c ****   {
 254              		.loc 1 184 7 is_stmt 0 view .LVU68
 255 004e 18A9     		add	r1, sp, #96
 256 0050 2448     		ldr	r0, .L21
 257 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 258              	.LVL4:
 184:Core/Src/main.c ****   {
 259              		.loc 1 184 6 view .LVU69
 260 0056 0028     		cmp	r0, #0
 261 0058 3AD1     		bne	.L16
 188:Core/Src/main.c ****   {
 262              		.loc 1 188 3 is_stmt 1 view .LVU70
 188:Core/Src/main.c ****   {
 263              		.loc 1 188 7 is_stmt 0 view .LVU71
 264 005a 2248     		ldr	r0, .L21
 265 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 266              	.LVL5:
 188:Core/Src/main.c ****   {
 267              		.loc 1 188 6 view .LVU72
 268 0060 0028     		cmp	r0, #0
 269 0062 37D1     		bne	.L17
 192:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 270              		.loc 1 192 3 is_stmt 1 view .LVU73
 192:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 271              		.loc 1 192 37 is_stmt 0 view .LVU74
 272 0064 0023     		movs	r3, #0
 273 0066 1593     		str	r3, [sp, #84]
 193:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 274              		.loc 1 193 3 is_stmt 1 view .LVU75
 193:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 275              		.loc 1 193 38 is_stmt 0 view .LVU76
 276 0068 1693     		str	r3, [sp, #88]
ARM GAS  /tmp/ccqcVTR6.s 			page 15


 194:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277              		.loc 1 194 3 is_stmt 1 view .LVU77
 194:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 278              		.loc 1 194 33 is_stmt 0 view .LVU78
 279 006a 1793     		str	r3, [sp, #92]
 195:Core/Src/main.c ****   {
 280              		.loc 1 195 3 is_stmt 1 view .LVU79
 195:Core/Src/main.c ****   {
 281              		.loc 1 195 7 is_stmt 0 view .LVU80
 282 006c 15A9     		add	r1, sp, #84
 283 006e 1D48     		ldr	r0, .L21
 284 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 285              	.LVL6:
 195:Core/Src/main.c ****   {
 286              		.loc 1 195 6 view .LVU81
 287 0074 0028     		cmp	r0, #0
 288 0076 2FD1     		bne	.L18
 199:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 289              		.loc 1 199 3 is_stmt 1 view .LVU82
 199:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 290              		.loc 1 199 20 is_stmt 0 view .LVU83
 291 0078 6023     		movs	r3, #96
 292 007a 0E93     		str	r3, [sp, #56]
 200:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 293              		.loc 1 200 3 is_stmt 1 view .LVU84
 200:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 294              		.loc 1 200 19 is_stmt 0 view .LVU85
 295 007c 0022     		movs	r2, #0
 296 007e 0F92     		str	r2, [sp, #60]
 201:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 297              		.loc 1 201 3 is_stmt 1 view .LVU86
 201:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 298              		.loc 1 201 24 is_stmt 0 view .LVU87
 299 0080 1092     		str	r2, [sp, #64]
 202:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 300              		.loc 1 202 3 is_stmt 1 view .LVU88
 202:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 301              		.loc 1 202 25 is_stmt 0 view .LVU89
 302 0082 1192     		str	r2, [sp, #68]
 203:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 303              		.loc 1 203 3 is_stmt 1 view .LVU90
 203:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 304              		.loc 1 203 24 is_stmt 0 view .LVU91
 305 0084 1292     		str	r2, [sp, #72]
 204:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 306              		.loc 1 204 3 is_stmt 1 view .LVU92
 204:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 307              		.loc 1 204 25 is_stmt 0 view .LVU93
 308 0086 1392     		str	r2, [sp, #76]
 205:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 309              		.loc 1 205 3 is_stmt 1 view .LVU94
 205:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 310              		.loc 1 205 26 is_stmt 0 view .LVU95
 311 0088 1492     		str	r2, [sp, #80]
 206:Core/Src/main.c ****   {
 312              		.loc 1 206 3 is_stmt 1 view .LVU96
 206:Core/Src/main.c ****   {
ARM GAS  /tmp/ccqcVTR6.s 			page 16


 313              		.loc 1 206 7 is_stmt 0 view .LVU97
 314 008a 0EA9     		add	r1, sp, #56
 315 008c 1548     		ldr	r0, .L21
 316 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 317              	.LVL7:
 206:Core/Src/main.c ****   {
 318              		.loc 1 206 6 view .LVU98
 319 0092 18BB     		cbnz	r0, .L19
 210:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 320              		.loc 1 210 3 is_stmt 1 view .LVU99
 210:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 321              		.loc 1 210 40 is_stmt 0 view .LVU100
 322 0094 0023     		movs	r3, #0
 323 0096 0193     		str	r3, [sp, #4]
 211:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 324              		.loc 1 211 3 is_stmt 1 view .LVU101
 211:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 325              		.loc 1 211 41 is_stmt 0 view .LVU102
 326 0098 0293     		str	r3, [sp, #8]
 212:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 327              		.loc 1 212 3 is_stmt 1 view .LVU103
 212:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 328              		.loc 1 212 34 is_stmt 0 view .LVU104
 329 009a 0393     		str	r3, [sp, #12]
 213:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 330              		.loc 1 213 3 is_stmt 1 view .LVU105
 213:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 331              		.loc 1 213 33 is_stmt 0 view .LVU106
 332 009c 0493     		str	r3, [sp, #16]
 214:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 333              		.loc 1 214 3 is_stmt 1 view .LVU107
 214:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 334              		.loc 1 214 35 is_stmt 0 view .LVU108
 335 009e 0593     		str	r3, [sp, #20]
 215:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 336              		.loc 1 215 3 is_stmt 1 view .LVU109
 215:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 337              		.loc 1 215 38 is_stmt 0 view .LVU110
 338 00a0 4FF40052 		mov	r2, #8192
 339 00a4 0692     		str	r2, [sp, #24]
 216:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 340              		.loc 1 216 3 is_stmt 1 view .LVU111
 216:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 341              		.loc 1 216 36 is_stmt 0 view .LVU112
 342 00a6 0793     		str	r3, [sp, #28]
 217:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 343              		.loc 1 217 3 is_stmt 1 view .LVU113
 217:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 344              		.loc 1 217 36 is_stmt 0 view .LVU114
 345 00a8 0893     		str	r3, [sp, #32]
 218:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 346              		.loc 1 218 3 is_stmt 1 view .LVU115
 218:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 347              		.loc 1 218 36 is_stmt 0 view .LVU116
 348 00aa 0993     		str	r3, [sp, #36]
 219:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 349              		.loc 1 219 3 is_stmt 1 view .LVU117
ARM GAS  /tmp/ccqcVTR6.s 			page 17


 219:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 350              		.loc 1 219 39 is_stmt 0 view .LVU118
 351 00ac 4FF00072 		mov	r2, #33554432
 352 00b0 0A92     		str	r2, [sp, #40]
 220:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 353              		.loc 1 220 3 is_stmt 1 view .LVU119
 220:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 354              		.loc 1 220 37 is_stmt 0 view .LVU120
 355 00b2 0B93     		str	r3, [sp, #44]
 221:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 356              		.loc 1 221 3 is_stmt 1 view .LVU121
 221:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 357              		.loc 1 221 37 is_stmt 0 view .LVU122
 358 00b4 0C93     		str	r3, [sp, #48]
 222:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 359              		.loc 1 222 3 is_stmt 1 view .LVU123
 222:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 360              		.loc 1 222 40 is_stmt 0 view .LVU124
 361 00b6 0D93     		str	r3, [sp, #52]
 223:Core/Src/main.c ****   {
 362              		.loc 1 223 3 is_stmt 1 view .LVU125
 223:Core/Src/main.c ****   {
 363              		.loc 1 223 7 is_stmt 0 view .LVU126
 364 00b8 01A9     		add	r1, sp, #4
 365 00ba 0A48     		ldr	r0, .L21
 366 00bc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 367              	.LVL8:
 223:Core/Src/main.c ****   {
 368              		.loc 1 223 6 view .LVU127
 369 00c0 70B9     		cbnz	r0, .L20
 230:Core/Src/main.c **** 
 370              		.loc 1 230 3 is_stmt 1 view .LVU128
 371 00c2 0848     		ldr	r0, .L21
 372 00c4 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 373              	.LVL9:
 232:Core/Src/main.c **** 
 374              		.loc 1 232 1 is_stmt 0 view .LVU129
 375 00c8 1CB0     		add	sp, sp, #112
 376              	.LCFI5:
 377              		.cfi_remember_state
 378              		.cfi_def_cfa_offset 8
 379              		@ sp needed
 380 00ca 10BD     		pop	{r4, pc}
 381              	.L15:
 382              	.LCFI6:
 383              		.cfi_restore_state
 181:Core/Src/main.c ****   }
 384              		.loc 1 181 5 is_stmt 1 view .LVU130
 385 00cc FFF7FEFF 		bl	Error_Handler
 386              	.LVL10:
 387              	.L16:
 186:Core/Src/main.c ****   }
 388              		.loc 1 186 5 view .LVU131
 389 00d0 FFF7FEFF 		bl	Error_Handler
 390              	.LVL11:
 391              	.L17:
 190:Core/Src/main.c ****   }
ARM GAS  /tmp/ccqcVTR6.s 			page 18


 392              		.loc 1 190 5 view .LVU132
 393 00d4 FFF7FEFF 		bl	Error_Handler
 394              	.LVL12:
 395              	.L18:
 197:Core/Src/main.c ****   }
 396              		.loc 1 197 5 view .LVU133
 397 00d8 FFF7FEFF 		bl	Error_Handler
 398              	.LVL13:
 399              	.L19:
 208:Core/Src/main.c ****   }
 400              		.loc 1 208 5 view .LVU134
 401 00dc FFF7FEFF 		bl	Error_Handler
 402              	.LVL14:
 403              	.L20:
 225:Core/Src/main.c ****   }
 404              		.loc 1 225 5 view .LVU135
 405 00e0 FFF7FEFF 		bl	Error_Handler
 406              	.LVL15:
 407              	.L22:
 408              		.align	2
 409              	.L21:
 410 00e4 00000000 		.word	htim1
 411 00e8 002C0140 		.word	1073818624
 412              		.cfi_endproc
 413              	.LFE134:
 415              		.section	.text.SystemClock_Config,"ax",%progbits
 416              		.align	1
 417              		.global	SystemClock_Config
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	SystemClock_Config:
 423              	.LFB133:
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 424              		.loc 1 112 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 80
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 00B5     		push	{lr}
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 4
 431              		.cfi_offset 14, -4
 432 0002 95B0     		sub	sp, sp, #84
 433              	.LCFI8:
 434              		.cfi_def_cfa_offset 88
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 435              		.loc 1 113 3 view .LVU137
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 436              		.loc 1 113 22 is_stmt 0 view .LVU138
 437 0004 3822     		movs	r2, #56
 438 0006 0021     		movs	r1, #0
 439 0008 06A8     		add	r0, sp, #24
 440 000a FFF7FEFF 		bl	memset
 441              	.LVL16:
 114:Core/Src/main.c **** 
 442              		.loc 1 114 3 is_stmt 1 view .LVU139
 114:Core/Src/main.c **** 
ARM GAS  /tmp/ccqcVTR6.s 			page 19


 443              		.loc 1 114 22 is_stmt 0 view .LVU140
 444 000e 0023     		movs	r3, #0
 445 0010 0193     		str	r3, [sp, #4]
 446 0012 0293     		str	r3, [sp, #8]
 447 0014 0393     		str	r3, [sp, #12]
 448 0016 0493     		str	r3, [sp, #16]
 449 0018 0593     		str	r3, [sp, #20]
 118:Core/Src/main.c **** 
 450              		.loc 1 118 3 is_stmt 1 view .LVU141
 451 001a 4FF40070 		mov	r0, #512
 452 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 453              	.LVL17:
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 454              		.loc 1 123 3 view .LVU142
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 455              		.loc 1 123 36 is_stmt 0 view .LVU143
 456 0022 0122     		movs	r2, #1
 457 0024 0692     		str	r2, [sp, #24]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 458              		.loc 1 124 3 is_stmt 1 view .LVU144
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 459              		.loc 1 124 30 is_stmt 0 view .LVU145
 460 0026 4FF48033 		mov	r3, #65536
 461 002a 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 462              		.loc 1 125 3 is_stmt 1 view .LVU146
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 463              		.loc 1 125 34 is_stmt 0 view .LVU147
 464 002c 0223     		movs	r3, #2
 465 002e 0D93     		str	r3, [sp, #52]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 466              		.loc 1 126 3 is_stmt 1 view .LVU148
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 467              		.loc 1 126 35 is_stmt 0 view .LVU149
 468 0030 0321     		movs	r1, #3
 469 0032 0E91     		str	r1, [sp, #56]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 470              		.loc 1 127 3 is_stmt 1 view .LVU150
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 471              		.loc 1 127 30 is_stmt 0 view .LVU151
 472 0034 0F92     		str	r2, [sp, #60]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 473              		.loc 1 128 3 is_stmt 1 view .LVU152
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 474              		.loc 1 128 30 is_stmt 0 view .LVU153
 475 0036 1922     		movs	r2, #25
 476 0038 1092     		str	r2, [sp, #64]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 477              		.loc 1 129 3 is_stmt 1 view .LVU154
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 478              		.loc 1 129 30 is_stmt 0 view .LVU155
 479 003a 1193     		str	r3, [sp, #68]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 480              		.loc 1 130 3 is_stmt 1 view .LVU156
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 481              		.loc 1 130 30 is_stmt 0 view .LVU157
 482 003c 1293     		str	r3, [sp, #72]
ARM GAS  /tmp/ccqcVTR6.s 			page 20


 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 483              		.loc 1 131 3 is_stmt 1 view .LVU158
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 484              		.loc 1 131 30 is_stmt 0 view .LVU159
 485 003e 1393     		str	r3, [sp, #76]
 132:Core/Src/main.c ****   {
 486              		.loc 1 132 3 is_stmt 1 view .LVU160
 132:Core/Src/main.c ****   {
 487              		.loc 1 132 7 is_stmt 0 view .LVU161
 488 0040 06A8     		add	r0, sp, #24
 489 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 490              	.LVL18:
 132:Core/Src/main.c ****   {
 491              		.loc 1 132 6 view .LVU162
 492 0046 70B9     		cbnz	r0, .L27
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 493              		.loc 1 139 3 is_stmt 1 view .LVU163
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 494              		.loc 1 139 31 is_stmt 0 view .LVU164
 495 0048 0F23     		movs	r3, #15
 496 004a 0193     		str	r3, [sp, #4]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 497              		.loc 1 141 3 is_stmt 1 view .LVU165
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 498              		.loc 1 141 34 is_stmt 0 view .LVU166
 499 004c 0321     		movs	r1, #3
 500 004e 0291     		str	r1, [sp, #8]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 501              		.loc 1 142 3 is_stmt 1 view .LVU167
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 502              		.loc 1 142 35 is_stmt 0 view .LVU168
 503 0050 0023     		movs	r3, #0
 504 0052 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 505              		.loc 1 143 3 is_stmt 1 view .LVU169
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 506              		.loc 1 143 36 is_stmt 0 view .LVU170
 507 0054 0493     		str	r3, [sp, #16]
 144:Core/Src/main.c **** 
 508              		.loc 1 144 3 is_stmt 1 view .LVU171
 144:Core/Src/main.c **** 
 509              		.loc 1 144 36 is_stmt 0 view .LVU172
 510 0056 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   {
 511              		.loc 1 146 3 is_stmt 1 view .LVU173
 146:Core/Src/main.c ****   {
 512              		.loc 1 146 7 is_stmt 0 view .LVU174
 513 0058 01A8     		add	r0, sp, #4
 514 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 515              	.LVL19:
 146:Core/Src/main.c ****   {
 516              		.loc 1 146 6 view .LVU175
 517 005e 20B9     		cbnz	r0, .L28
 150:Core/Src/main.c **** 
 518              		.loc 1 150 1 view .LVU176
 519 0060 15B0     		add	sp, sp, #84
 520              	.LCFI9:
ARM GAS  /tmp/ccqcVTR6.s 			page 21


 521              		.cfi_remember_state
 522              		.cfi_def_cfa_offset 4
 523              		@ sp needed
 524 0062 5DF804FB 		ldr	pc, [sp], #4
 525              	.L27:
 526              	.LCFI10:
 527              		.cfi_restore_state
 134:Core/Src/main.c ****   }
 528              		.loc 1 134 5 is_stmt 1 view .LVU177
 529 0066 FFF7FEFF 		bl	Error_Handler
 530              	.LVL20:
 531              	.L28:
 148:Core/Src/main.c ****   }
 532              		.loc 1 148 5 view .LVU178
 533 006a FFF7FEFF 		bl	Error_Handler
 534              	.LVL21:
 535              		.cfi_endproc
 536              	.LFE133:
 538              		.section	.text.main,"ax",%progbits
 539              		.align	1
 540              		.global	main
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	main:
 546              	.LFB132:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 547              		.loc 1 67 1 view -0
 548              		.cfi_startproc
 549              		@ Volatile: function does not return.
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 08B5     		push	{r3, lr}
 553              	.LCFI11:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 3, -8
 556              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 557              		.loc 1 75 3 view .LVU180
 558 0002 FFF7FEFF 		bl	HAL_Init
 559              	.LVL22:
  82:Core/Src/main.c **** 
 560              		.loc 1 82 3 view .LVU181
 561 0006 FFF7FEFF 		bl	SystemClock_Config
 562              	.LVL23:
  89:Core/Src/main.c ****   MX_TIM1_Init();
 563              		.loc 1 89 3 view .LVU182
 564 000a FFF7FEFF 		bl	MX_GPIO_Init
 565              	.LVL24:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 566              		.loc 1 90 3 view .LVU183
 567 000e FFF7FEFF 		bl	MX_TIM1_Init
 568              	.LVL25:
  94:Core/Src/main.c ****   /* Infinite loop */
 569              		.loc 1 94 2 view .LVU184
 570 0012 0021     		movs	r1, #0
 571 0014 0348     		ldr	r0, .L32
ARM GAS  /tmp/ccqcVTR6.s 			page 22


 572 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 573              	.LVL26:
 574              	.L30:
  97:Core/Src/main.c ****   {
 575              		.loc 1 97 3 discriminator 1 view .LVU185
 100:Core/Src/main.c **** 
 576              		.loc 1 100 5 discriminator 1 view .LVU186
 577 001a 024B     		ldr	r3, .L32
 578 001c 1B68     		ldr	r3, [r3]
 579 001e FA22     		movs	r2, #250
 580 0020 5A63     		str	r2, [r3, #52]
  97:Core/Src/main.c ****   {
 581              		.loc 1 97 9 discriminator 1 view .LVU187
 582 0022 FAE7     		b	.L30
 583              	.L33:
 584              		.align	2
 585              	.L32:
 586 0024 00000000 		.word	htim1
 587              		.cfi_endproc
 588              	.LFE132:
 590              		.global	htim1
 591              		.section	.bss.htim1,"aw",%nobits
 592              		.align	2
 595              	htim1:
 596 0000 00000000 		.space	76
 596      00000000 
 596      00000000 
 596      00000000 
 596      00000000 
 597              		.text
 598              	.Letext0:
 599              		.file 3 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/machine/_default_ty
 600              		.file 4 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/sys/_stdint.h"
 601              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 602              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 603              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 604              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 605              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 606              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 607              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 608              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 609              		.file 13 "Core/Inc/main.h"
 610              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 611              		.file 15 "<built-in>"
ARM GAS  /tmp/ccqcVTR6.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccqcVTR6.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccqcVTR6.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccqcVTR6.s:128    .text.MX_GPIO_Init:00000070 $d
     /tmp/ccqcVTR6.s:133    .text.Error_Handler:00000000 $t
     /tmp/ccqcVTR6.s:139    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccqcVTR6.s:171    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccqcVTR6.s:176    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccqcVTR6.s:410    .text.MX_TIM1_Init:000000e4 $d
     /tmp/ccqcVTR6.s:595    .bss.htim1:00000000 htim1
     /tmp/ccqcVTR6.s:416    .text.SystemClock_Config:00000000 $t
     /tmp/ccqcVTR6.s:422    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccqcVTR6.s:539    .text.main:00000000 $t
     /tmp/ccqcVTR6.s:545    .text.main:00000000 main
     /tmp/ccqcVTR6.s:586    .text.main:00000024 $d
     /tmp/ccqcVTR6.s:592    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
