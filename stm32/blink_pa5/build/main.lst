ARM GAS  /tmp/ccyNPM0W.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** void SystemClock_Config(void);
  24:Core/Src/main.c **** static void MX_GPIO_Init(void);
  25:Core/Src/main.c **** uint8_t g_status = 0;
  26:Core/Src/main.c **** uint8_t g_current_state = 0;
  27:Core/Src/main.c **** uint8_t g_count = 0;
  28:Core/Src/main.c **** uint16_t g_debounce_count = 100;
  29:Core/Src/main.c **** int main(void) {
  30:Core/Src/main.c **** 
  31:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccyNPM0W.s 			page 2


  32:Core/Src/main.c ****   SystemClock_Config();
  33:Core/Src/main.c ****   MX_GPIO_Init();
  34:Core/Src/main.c **** 
  35:Core/Src/main.c ****   while (1)
  36:Core/Src/main.c ****   {
  37:Core/Src/main.c ****     /* USER CODE END WHILE */
  38:Core/Src/main.c ****     // g_status =  HAL_GPIO_ReadPin( GPIOC, GPIO_PIN_13 );
  39:Core/Src/main.c ****     // if ( g_status == g_current_state && g_count > 0 ){
  40:Core/Src/main.c ****     //     g_count--;
  41:Core/Src/main.c ****     // } else if ( g_status != g_current_state ){
  42:Core/Src/main.c ****     //     g_count++;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c ****     // } 
  45:Core/Src/main.c ****     // if ( g_count >= g_debounce_count ){
  46:Core/Src/main.c ****     //      g_count = 0;
  47:Core/Src/main.c ****     //      g_current_state = g_status;
  48:Core/Src/main.c ****     //      HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5 , 1 );
  49:Core/Src/main.c ****     //      HAL_Delay( 2000 );
  50:Core/Src/main.c ****     // }
  51:Core/Src/main.c ****     // else{ 
  52:Core/Src/main.c ****     //   HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5, 0 );
  53:Core/Src/main.c ****     // }
  54:Core/Src/main.c ****  //HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5, 1 );
  55:Core/Src/main.c ****  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5 );
  56:Core/Src/main.c ****  HAL_Delay(200);
  57:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_0 );
  58:Core/Src/main.c ****  HAL_Delay(200);
  59:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  60:Core/Src/main.c ****   /* USER CODE END 3 */
  61:Core/Src/main.c ****  }
  62:Core/Src/main.c **** }
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief System Clock Configuration
  65:Core/Src/main.c ****   * @retval None
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** void SystemClock_Config(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  70:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  77:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  80:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  81:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  88:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccyNPM0W.s 			page 3


  89:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  90:Core/Src/main.c ****   {
  91:Core/Src/main.c ****     Error_Handler();
  92:Core/Src/main.c ****   }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
  95:Core/Src/main.c ****   */
  96:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  97:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  98:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  99:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 100:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     Error_Handler();
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief GPIO Initialization Function
 111:Core/Src/main.c ****   * @param None
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** static void MX_GPIO_Init(void)
 115:Core/Src/main.c **** {
  28              		.loc 1 115 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8BB0     		sub	sp, sp, #44
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 116:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 116 3 view .LVU1
  44              		.loc 1 116 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0594     		str	r4, [sp, #20]
  47 0008 0694     		str	r4, [sp, #24]
  48 000a 0794     		str	r4, [sp, #28]
  49 000c 0894     		str	r4, [sp, #32]
  50 000e 0994     		str	r4, [sp, #36]
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 119:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 119 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 119 3 view .LVU4
ARM GAS  /tmp/ccyNPM0W.s 			page 4


  54              		.loc 1 119 3 view .LVU5
  55 0010 3F4B     		ldr	r3, .L3
  56 0012 DA6C     		ldr	r2, [r3, #76]
  57 0014 42F00402 		orr	r2, r2, #4
  58 0018 DA64     		str	r2, [r3, #76]
  59              		.loc 1 119 3 view .LVU6
  60 001a DA6C     		ldr	r2, [r3, #76]
  61 001c 02F00402 		and	r2, r2, #4
  62 0020 0092     		str	r2, [sp]
  63              		.loc 1 119 3 view .LVU7
  64 0022 009A     		ldr	r2, [sp]
  65              	.LBE4:
  66              		.loc 1 119 3 view .LVU8
 120:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  67              		.loc 1 120 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 120 3 view .LVU10
  70              		.loc 1 120 3 view .LVU11
  71 0024 DA6C     		ldr	r2, [r3, #76]
  72 0026 42F02002 		orr	r2, r2, #32
  73 002a DA64     		str	r2, [r3, #76]
  74              		.loc 1 120 3 view .LVU12
  75 002c DA6C     		ldr	r2, [r3, #76]
  76 002e 02F02002 		and	r2, r2, #32
  77 0032 0192     		str	r2, [sp, #4]
  78              		.loc 1 120 3 view .LVU13
  79 0034 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 120 3 view .LVU14
 121:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 121 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 121 3 view .LVU16
  85              		.loc 1 121 3 view .LVU17
  86 0036 DA6C     		ldr	r2, [r3, #76]
  87 0038 42F00102 		orr	r2, r2, #1
  88 003c DA64     		str	r2, [r3, #76]
  89              		.loc 1 121 3 view .LVU18
  90 003e DA6C     		ldr	r2, [r3, #76]
  91 0040 02F00102 		and	r2, r2, #1
  92 0044 0292     		str	r2, [sp, #8]
  93              		.loc 1 121 3 view .LVU19
  94 0046 029A     		ldr	r2, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 121 3 view .LVU20
 122:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97              		.loc 1 122 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 122 3 view .LVU22
 100              		.loc 1 122 3 view .LVU23
 101 0048 DA6C     		ldr	r2, [r3, #76]
 102 004a 42F00202 		orr	r2, r2, #2
 103 004e DA64     		str	r2, [r3, #76]
 104              		.loc 1 122 3 view .LVU24
 105 0050 DA6C     		ldr	r2, [r3, #76]
 106 0052 02F00202 		and	r2, r2, #2
 107 0056 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccyNPM0W.s 			page 5


 108              		.loc 1 122 3 view .LVU25
 109 0058 039A     		ldr	r2, [sp, #12]
 110              	.LBE7:
 111              		.loc 1 122 3 view .LVU26
 123:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 112              		.loc 1 123 3 view .LVU27
 113              	.LBB8:
 114              		.loc 1 123 3 view .LVU28
 115              		.loc 1 123 3 view .LVU29
 116 005a DA6C     		ldr	r2, [r3, #76]
 117 005c 42F00402 		orr	r2, r2, #4
 118 0060 DA64     		str	r2, [r3, #76]
 119              		.loc 1 123 3 view .LVU30
 120 0062 DB6C     		ldr	r3, [r3, #76]
 121 0064 03F00403 		and	r3, r3, #4
 122 0068 0493     		str	r3, [sp, #16]
 123              		.loc 1 123 3 view .LVU31
 124 006a 049B     		ldr	r3, [sp, #16]
 125              	.LBE8:
 126              		.loc 1 123 3 view .LVU32
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9, GPIO_PIN_RESET);
 127              		.loc 1 126 3 view .LVU33
 128 006c 2246     		mov	r2, r4
 129 006e 4FF43871 		mov	r1, #736
 130 0072 4FF09040 		mov	r0, #1207959552
 131 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL0:
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 133              		.loc 1 129 3 view .LVU34
 134 007a 264D     		ldr	r5, .L3+4
 135 007c 2246     		mov	r2, r4
 136 007e 8021     		movs	r1, #128
 137 0080 2846     		mov	r0, r5
 138 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL1:
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 140              		.loc 1 132 3 view .LVU35
 141 0086 244F     		ldr	r7, .L3+8
 142 0088 2246     		mov	r2, r4
 143 008a 4021     		movs	r1, #64
 144 008c 3846     		mov	r0, r7
 145 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL2:
 133:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 147              		.loc 1 133 3 view .LVU36
 148 0092 2246     		mov	r2, r4
 149 0094 0121     		movs	r1, #1
 150 0096 2846     		mov	r0, r5
 151 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL3:
 134:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
ARM GAS  /tmp/ccyNPM0W.s 			page 6


 135:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 153              		.loc 1 135 3 view .LVU37
 154              		.loc 1 135 23 is_stmt 0 view .LVU38
 155 009c 4FF40053 		mov	r3, #8192
 156 00a0 0593     		str	r3, [sp, #20]
 136:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 157              		.loc 1 136 3 is_stmt 1 view .LVU39
 158              		.loc 1 136 24 is_stmt 0 view .LVU40
 159 00a2 0694     		str	r4, [sp, #24]
 137:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 160              		.loc 1 137 3 is_stmt 1 view .LVU41
 161              		.loc 1 137 24 is_stmt 0 view .LVU42
 162 00a4 0223     		movs	r3, #2
 163 00a6 0793     		str	r3, [sp, #28]
 138:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 164              		.loc 1 138 3 is_stmt 1 view .LVU43
 165 00a8 05A9     		add	r1, sp, #20
 166 00aa 2846     		mov	r0, r5
 167 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 168              	.LVL4:
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /*Configure GPIO pins : PA5 PA6 PA7 PA9 */
 141:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9| GPIO_PIN_0;
 169              		.loc 1 141 3 view .LVU44
 170              		.loc 1 141 23 is_stmt 0 view .LVU45
 171 00b0 40F2E123 		movw	r3, #737
 172 00b4 0593     		str	r3, [sp, #20]
 142:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 173              		.loc 1 142 3 is_stmt 1 view .LVU46
 174              		.loc 1 142 24 is_stmt 0 view .LVU47
 175 00b6 0126     		movs	r6, #1
 176 00b8 0696     		str	r6, [sp, #24]
 143:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 177              		.loc 1 143 3 is_stmt 1 view .LVU48
 178              		.loc 1 143 24 is_stmt 0 view .LVU49
 179 00ba 0794     		str	r4, [sp, #28]
 144:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 180              		.loc 1 144 3 is_stmt 1 view .LVU50
 181              		.loc 1 144 25 is_stmt 0 view .LVU51
 182 00bc 0894     		str	r4, [sp, #32]
 145:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 183              		.loc 1 145 3 is_stmt 1 view .LVU52
 184 00be 05A9     		add	r1, sp, #20
 185 00c0 4FF09040 		mov	r0, #1207959552
 186 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL5:
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 188              		.loc 1 147 3 view .LVU53
 189              		.loc 1 147 24 is_stmt 0 view .LVU54
 190 00c8 0696     		str	r6, [sp, #24]
 148:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 191              		.loc 1 148 3 is_stmt 1 view .LVU55
 192              		.loc 1 148 24 is_stmt 0 view .LVU56
 193 00ca 0794     		str	r4, [sp, #28]
 149:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 194              		.loc 1 149 3 is_stmt 1 view .LVU57
ARM GAS  /tmp/ccyNPM0W.s 			page 7


 195              		.loc 1 149 25 is_stmt 0 view .LVU58
 196 00cc 0894     		str	r4, [sp, #32]
 150:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 197              		.loc 1 150 3 is_stmt 1 view .LVU59
 198 00ce 05A9     		add	r1, sp, #20
 199 00d0 2846     		mov	r0, r5
 200 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL6:
 151:Core/Src/main.c ****   /*Configure GPIO pin : PB10 */
 152:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 202              		.loc 1 152 3 view .LVU60
 203              		.loc 1 152 23 is_stmt 0 view .LVU61
 204 00d6 4FF48063 		mov	r3, #1024
 205 00da 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 206              		.loc 1 153 3 is_stmt 1 view .LVU62
 207              		.loc 1 153 24 is_stmt 0 view .LVU63
 208 00dc 0694     		str	r4, [sp, #24]
 154:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 154 3 is_stmt 1 view .LVU64
 210              		.loc 1 154 24 is_stmt 0 view .LVU65
 211 00de 0794     		str	r4, [sp, #28]
 155:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 212              		.loc 1 155 3 is_stmt 1 view .LVU66
 213 00e0 05A9     		add	r1, sp, #20
 214 00e2 3846     		mov	r0, r7
 215 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 216              	.LVL7:
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /*Configure GPIO pin : PC7 */
 158:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 217              		.loc 1 158 3 view .LVU67
 218              		.loc 1 158 23 is_stmt 0 view .LVU68
 219 00e8 8023     		movs	r3, #128
 220 00ea 0593     		str	r3, [sp, #20]
 159:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 221              		.loc 1 159 3 is_stmt 1 view .LVU69
 222              		.loc 1 159 24 is_stmt 0 view .LVU70
 223 00ec 0696     		str	r6, [sp, #24]
 160:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 224              		.loc 1 160 3 is_stmt 1 view .LVU71
 225              		.loc 1 160 24 is_stmt 0 view .LVU72
 226 00ee 0794     		str	r4, [sp, #28]
 161:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 227              		.loc 1 161 3 is_stmt 1 view .LVU73
 228              		.loc 1 161 25 is_stmt 0 view .LVU74
 229 00f0 0894     		str	r4, [sp, #32]
 162:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 230              		.loc 1 162 3 is_stmt 1 view .LVU75
 231 00f2 05A9     		add	r1, sp, #20
 232 00f4 2846     		mov	r0, r5
 233 00f6 FFF7FEFF 		bl	HAL_GPIO_Init
 234              	.LVL8:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /*Configure GPIO pin : PB6 */
 165:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 235              		.loc 1 165 3 view .LVU76
ARM GAS  /tmp/ccyNPM0W.s 			page 8


 236              		.loc 1 165 23 is_stmt 0 view .LVU77
 237 00fa 4023     		movs	r3, #64
 238 00fc 0593     		str	r3, [sp, #20]
 166:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 239              		.loc 1 166 3 is_stmt 1 view .LVU78
 240              		.loc 1 166 24 is_stmt 0 view .LVU79
 241 00fe 0696     		str	r6, [sp, #24]
 167:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 242              		.loc 1 167 3 is_stmt 1 view .LVU80
 243              		.loc 1 167 24 is_stmt 0 view .LVU81
 244 0100 0794     		str	r4, [sp, #28]
 168:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 245              		.loc 1 168 3 is_stmt 1 view .LVU82
 246              		.loc 1 168 25 is_stmt 0 view .LVU83
 247 0102 0894     		str	r4, [sp, #32]
 169:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 248              		.loc 1 169 3 is_stmt 1 view .LVU84
 249 0104 05A9     		add	r1, sp, #20
 250 0106 3846     		mov	r0, r7
 251 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL9:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** }
 253              		.loc 1 171 1 is_stmt 0 view .LVU85
 254 010c 0BB0     		add	sp, sp, #44
 255              	.LCFI2:
 256              		.cfi_def_cfa_offset 20
 257              		@ sp needed
 258 010e F0BD     		pop	{r4, r5, r6, r7, pc}
 259              	.L4:
 260              		.align	2
 261              	.L3:
 262 0110 00100240 		.word	1073876992
 263 0114 00080048 		.word	1207961600
 264 0118 00040048 		.word	1207960576
 265              		.cfi_endproc
 266              	.LFE134:
 268              		.section	.text.Error_Handler,"ax",%progbits
 269              		.align	1
 270              		.global	Error_Handler
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	Error_Handler:
 276              	.LFB135:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE END 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void Error_Handler(void)
 182:Core/Src/main.c **** {
 277              		.loc 1 182 1 is_stmt 1 view -0
ARM GAS  /tmp/ccyNPM0W.s 			page 9


 278              		.cfi_startproc
 279              		@ Volatile: function does not return.
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 183:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 184:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 185:Core/Src/main.c ****   __disable_irq();
 283              		.loc 1 185 3 view .LVU87
 284              	.LBB9:
 285              	.LBI9:
 286              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccyNPM0W.s 			page 10


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccyNPM0W.s 			page 11


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/ccyNPM0W.s 			page 12


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 287              		.loc 2 207 27 view .LVU88
 288              	.LBB10:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 289              		.loc 2 209 3 view .LVU89
 290              		.syntax unified
 291              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 292 0000 72B6     		cpsid i
 293              	@ 0 "" 2
ARM GAS  /tmp/ccyNPM0W.s 			page 13


 294              		.thumb
 295              		.syntax unified
 296              	.L6:
 297              	.LBE10:
 298              	.LBE9:
 186:Core/Src/main.c ****   while (1)
 299              		.loc 1 186 3 discriminator 1 view .LVU90
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****   }
 300              		.loc 1 188 3 discriminator 1 view .LVU91
 186:Core/Src/main.c ****   while (1)
 301              		.loc 1 186 9 discriminator 1 view .LVU92
 302 0002 FEE7     		b	.L6
 303              		.cfi_endproc
 304              	.LFE135:
 306              		.section	.text.SystemClock_Config,"ax",%progbits
 307              		.align	1
 308              		.global	SystemClock_Config
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	SystemClock_Config:
 314              	.LFB133:
  68:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 315              		.loc 1 68 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 80
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 00B5     		push	{lr}
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 14, -4
 323 0002 95B0     		sub	sp, sp, #84
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 88
  69:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 326              		.loc 1 69 3 view .LVU94
  69:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 327              		.loc 1 69 22 is_stmt 0 view .LVU95
 328 0004 3822     		movs	r2, #56
 329 0006 0021     		movs	r1, #0
 330 0008 06A8     		add	r0, sp, #24
 331 000a FFF7FEFF 		bl	memset
 332              	.LVL10:
  70:Core/Src/main.c **** 
 333              		.loc 1 70 3 is_stmt 1 view .LVU96
  70:Core/Src/main.c **** 
 334              		.loc 1 70 22 is_stmt 0 view .LVU97
 335 000e 0023     		movs	r3, #0
 336 0010 0193     		str	r3, [sp, #4]
 337 0012 0293     		str	r3, [sp, #8]
 338 0014 0393     		str	r3, [sp, #12]
 339 0016 0493     		str	r3, [sp, #16]
 340 0018 0593     		str	r3, [sp, #20]
  74:Core/Src/main.c **** 
 341              		.loc 1 74 3 is_stmt 1 view .LVU98
 342 001a 4FF40070 		mov	r0, #512
ARM GAS  /tmp/ccyNPM0W.s 			page 14


 343 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 344              	.LVL11:
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 345              		.loc 1 79 3 view .LVU99
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 346              		.loc 1 79 36 is_stmt 0 view .LVU100
 347 0022 0223     		movs	r3, #2
 348 0024 0693     		str	r3, [sp, #24]
  80:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 349              		.loc 1 80 3 is_stmt 1 view .LVU101
  80:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 350              		.loc 1 80 30 is_stmt 0 view .LVU102
 351 0026 4FF48072 		mov	r2, #256
 352 002a 0992     		str	r2, [sp, #36]
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 353              		.loc 1 81 3 is_stmt 1 view .LVU103
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 354              		.loc 1 81 41 is_stmt 0 view .LVU104
 355 002c 4022     		movs	r2, #64
 356 002e 0A92     		str	r2, [sp, #40]
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 357              		.loc 1 82 3 is_stmt 1 view .LVU105
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 358              		.loc 1 82 34 is_stmt 0 view .LVU106
 359 0030 0D93     		str	r3, [sp, #52]
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 360              		.loc 1 83 3 is_stmt 1 view .LVU107
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 361              		.loc 1 83 35 is_stmt 0 view .LVU108
 362 0032 0E93     		str	r3, [sp, #56]
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 363              		.loc 1 84 3 is_stmt 1 view .LVU109
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 364              		.loc 1 84 30 is_stmt 0 view .LVU110
 365 0034 0F93     		str	r3, [sp, #60]
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 366              		.loc 1 85 3 is_stmt 1 view .LVU111
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 367              		.loc 1 85 30 is_stmt 0 view .LVU112
 368 0036 1922     		movs	r2, #25
 369 0038 1092     		str	r2, [sp, #64]
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 370              		.loc 1 86 3 is_stmt 1 view .LVU113
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 371              		.loc 1 86 30 is_stmt 0 view .LVU114
 372 003a 1193     		str	r3, [sp, #68]
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 373              		.loc 1 87 3 is_stmt 1 view .LVU115
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 374              		.loc 1 87 30 is_stmt 0 view .LVU116
 375 003c 1293     		str	r3, [sp, #72]
  88:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 376              		.loc 1 88 3 is_stmt 1 view .LVU117
  88:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 377              		.loc 1 88 30 is_stmt 0 view .LVU118
 378 003e 1393     		str	r3, [sp, #76]
  89:Core/Src/main.c ****   {
ARM GAS  /tmp/ccyNPM0W.s 			page 15


 379              		.loc 1 89 3 is_stmt 1 view .LVU119
  89:Core/Src/main.c ****   {
 380              		.loc 1 89 7 is_stmt 0 view .LVU120
 381 0040 06A8     		add	r0, sp, #24
 382 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 383              	.LVL12:
  89:Core/Src/main.c ****   {
 384              		.loc 1 89 6 view .LVU121
 385 0046 70B9     		cbnz	r0, .L11
  96:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 386              		.loc 1 96 3 is_stmt 1 view .LVU122
  96:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 387              		.loc 1 96 31 is_stmt 0 view .LVU123
 388 0048 0F23     		movs	r3, #15
 389 004a 0193     		str	r3, [sp, #4]
  98:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 390              		.loc 1 98 3 is_stmt 1 view .LVU124
  98:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 391              		.loc 1 98 34 is_stmt 0 view .LVU125
 392 004c 0321     		movs	r1, #3
 393 004e 0291     		str	r1, [sp, #8]
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 394              		.loc 1 99 3 is_stmt 1 view .LVU126
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 395              		.loc 1 99 35 is_stmt 0 view .LVU127
 396 0050 0023     		movs	r3, #0
 397 0052 0393     		str	r3, [sp, #12]
 100:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 398              		.loc 1 100 3 is_stmt 1 view .LVU128
 100:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 399              		.loc 1 100 36 is_stmt 0 view .LVU129
 400 0054 0493     		str	r3, [sp, #16]
 101:Core/Src/main.c **** 
 401              		.loc 1 101 3 is_stmt 1 view .LVU130
 101:Core/Src/main.c **** 
 402              		.loc 1 101 36 is_stmt 0 view .LVU131
 403 0056 0593     		str	r3, [sp, #20]
 103:Core/Src/main.c ****   {
 404              		.loc 1 103 3 is_stmt 1 view .LVU132
 103:Core/Src/main.c ****   {
 405              		.loc 1 103 7 is_stmt 0 view .LVU133
 406 0058 01A8     		add	r0, sp, #4
 407 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 408              	.LVL13:
 103:Core/Src/main.c ****   {
 409              		.loc 1 103 6 view .LVU134
 410 005e 20B9     		cbnz	r0, .L12
 107:Core/Src/main.c **** 
 411              		.loc 1 107 1 view .LVU135
 412 0060 15B0     		add	sp, sp, #84
 413              	.LCFI5:
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 4
 416              		@ sp needed
 417 0062 5DF804FB 		ldr	pc, [sp], #4
 418              	.L11:
 419              	.LCFI6:
ARM GAS  /tmp/ccyNPM0W.s 			page 16


 420              		.cfi_restore_state
  91:Core/Src/main.c ****   }
 421              		.loc 1 91 5 is_stmt 1 view .LVU136
 422 0066 FFF7FEFF 		bl	Error_Handler
 423              	.LVL14:
 424              	.L12:
 105:Core/Src/main.c ****   }
 425              		.loc 1 105 5 view .LVU137
 426 006a FFF7FEFF 		bl	Error_Handler
 427              	.LVL15:
 428              		.cfi_endproc
 429              	.LFE133:
 431              		.section	.text.main,"ax",%progbits
 432              		.align	1
 433              		.global	main
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	main:
 439              	.LFB132:
  29:Core/Src/main.c **** 
 440              		.loc 1 29 16 view -0
 441              		.cfi_startproc
 442              		@ Volatile: function does not return.
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              	.LCFI7:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
 449              		.cfi_offset 14, -4
  31:Core/Src/main.c ****   SystemClock_Config();
 450              		.loc 1 31 3 view .LVU139
 451 0002 FFF7FEFF 		bl	HAL_Init
 452              	.LVL16:
  32:Core/Src/main.c ****   MX_GPIO_Init();
 453              		.loc 1 32 3 view .LVU140
 454 0006 FFF7FEFF 		bl	SystemClock_Config
 455              	.LVL17:
  33:Core/Src/main.c **** 
 456              		.loc 1 33 3 view .LVU141
 457 000a FFF7FEFF 		bl	MX_GPIO_Init
 458              	.LVL18:
 459              	.L14:
  35:Core/Src/main.c ****   {
 460              		.loc 1 35 3 discriminator 1 view .LVU142
  55:Core/Src/main.c ****  HAL_Delay(200);
 461              		.loc 1 55 2 discriminator 1 view .LVU143
 462 000e 2021     		movs	r1, #32
 463 0010 4FF09040 		mov	r0, #1207959552
 464 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 465              	.LVL19:
  56:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_0 );
 466              		.loc 1 56 2 discriminator 1 view .LVU144
 467 0018 C820     		movs	r0, #200
 468 001a FFF7FEFF 		bl	HAL_Delay
 469              	.LVL20:
ARM GAS  /tmp/ccyNPM0W.s 			page 17


  57:Core/Src/main.c ****  HAL_Delay(200);
 470              		.loc 1 57 3 discriminator 1 view .LVU145
 471 001e 0121     		movs	r1, #1
 472 0020 0348     		ldr	r0, .L16
 473 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 474              	.LVL21:
  58:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 475              		.loc 1 58 2 discriminator 1 view .LVU146
 476 0026 C820     		movs	r0, #200
 477 0028 FFF7FEFF 		bl	HAL_Delay
 478              	.LVL22:
  35:Core/Src/main.c ****   {
 479              		.loc 1 35 9 discriminator 1 view .LVU147
 480 002c EFE7     		b	.L14
 481              	.L17:
 482 002e 00BF     		.align	2
 483              	.L16:
 484 0030 00080048 		.word	1207961600
 485              		.cfi_endproc
 486              	.LFE132:
 488              		.global	g_debounce_count
 489              		.section	.data.g_debounce_count,"aw"
 490              		.align	1
 493              	g_debounce_count:
 494 0000 6400     		.short	100
 495              		.global	g_count
 496              		.section	.bss.g_count,"aw",%nobits
 499              	g_count:
 500 0000 00       		.space	1
 501              		.global	g_current_state
 502              		.section	.bss.g_current_state,"aw",%nobits
 505              	g_current_state:
 506 0000 00       		.space	1
 507              		.global	g_status
 508              		.section	.bss.g_status,"aw",%nobits
 511              	g_status:
 512 0000 00       		.space	1
 513              		.text
 514              	.Letext0:
 515              		.file 3 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/machine/_default_ty
 516              		.file 4 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/sys/_stdint.h"
 517              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 518              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 519              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 520              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 521              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 522              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 523              		.file 11 "<built-in>"
ARM GAS  /tmp/ccyNPM0W.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccyNPM0W.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccyNPM0W.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccyNPM0W.s:262    .text.MX_GPIO_Init:00000110 $d
     /tmp/ccyNPM0W.s:269    .text.Error_Handler:00000000 $t
     /tmp/ccyNPM0W.s:275    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccyNPM0W.s:307    .text.SystemClock_Config:00000000 $t
     /tmp/ccyNPM0W.s:313    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccyNPM0W.s:432    .text.main:00000000 $t
     /tmp/ccyNPM0W.s:438    .text.main:00000000 main
     /tmp/ccyNPM0W.s:484    .text.main:00000030 $d
     /tmp/ccyNPM0W.s:493    .data.g_debounce_count:00000000 g_debounce_count
     /tmp/ccyNPM0W.s:490    .data.g_debounce_count:00000000 $d
     /tmp/ccyNPM0W.s:499    .bss.g_count:00000000 g_count
     /tmp/ccyNPM0W.s:500    .bss.g_count:00000000 $d
     /tmp/ccyNPM0W.s:505    .bss.g_current_state:00000000 g_current_state
     /tmp/ccyNPM0W.s:506    .bss.g_current_state:00000000 $d
     /tmp/ccyNPM0W.s:511    .bss.g_status:00000000 g_status
     /tmp/ccyNPM0W.s:512    .bss.g_status:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
