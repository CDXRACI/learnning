ARM GAS  /tmp/ccroZnls.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** void SystemClock_Config(void);
  24:Core/Src/main.c **** static void MX_GPIO_Init(void);
  25:Core/Src/main.c **** uint8_t g_status = 0;
  26:Core/Src/main.c **** uint8_t g_current_state = 0;
  27:Core/Src/main.c **** uint8_t g_count = 0;
  28:Core/Src/main.c **** uint16_t g_debounce_count = 100;
  29:Core/Src/main.c **** int main(void) {
  30:Core/Src/main.c **** 
  31:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccroZnls.s 			page 2


  32:Core/Src/main.c ****   SystemClock_Config();
  33:Core/Src/main.c ****   MX_GPIO_Init();
  34:Core/Src/main.c **** 
  35:Core/Src/main.c ****   while (1)
  36:Core/Src/main.c ****   {
  37:Core/Src/main.c ****     /* USER CODE END WHILE */
  38:Core/Src/main.c ****     // g_status =  HAL_GPIO_ReadPin( GPIOC, GPIO_PIN_13 );
  39:Core/Src/main.c ****     // if ( g_status == g_current_state && g_count > 0 ){
  40:Core/Src/main.c ****     //     g_count--;
  41:Core/Src/main.c ****     // } else if ( g_status != g_current_state ){
  42:Core/Src/main.c ****     //     g_count++;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c ****     // } 
  45:Core/Src/main.c ****     // if ( g_count >= g_debounce_count ){
  46:Core/Src/main.c ****     //      g_count = 0;
  47:Core/Src/main.c ****     //      g_current_state = g_status;
  48:Core/Src/main.c ****     //      HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5 , 1 );
  49:Core/Src/main.c ****     //      HAL_Delay( 2000 );
  50:Core/Src/main.c ****     // }
  51:Core/Src/main.c ****     // else{ 
  52:Core/Src/main.c ****     //   HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5, 0 );
  53:Core/Src/main.c ****     // }
  54:Core/Src/main.c ****  //HAL_GPIO_WritePin( GPIOA, GPIO_PIN_5, 1 );
  55:Core/Src/main.c ****  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5 );
  56:Core/Src/main.c ****  HAL_Delay(200);
  57:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  58:Core/Src/main.c ****   
  59:Core/Src/main.c ****   /* USER CODE END 3 */
  60:Core/Src/main.c ****  }
  61:Core/Src/main.c **** }
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief System Clock Configuration
  64:Core/Src/main.c ****   * @retval None
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** void SystemClock_Config(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  69:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  76:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  80:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  88:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccroZnls.s 			page 3


  89:Core/Src/main.c ****   {
  90:Core/Src/main.c ****     Error_Handler();
  91:Core/Src/main.c ****   }
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  96:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  97:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  98:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 100:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     Error_Handler();
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief GPIO Initialization Function
 110:Core/Src/main.c ****   * @param None
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** static void MX_GPIO_Init(void)
 114:Core/Src/main.c **** {
  28              		.loc 1 114 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8BB0     		sub	sp, sp, #44
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 115:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 115 3 view .LVU1
  44              		.loc 1 115 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0594     		str	r4, [sp, #20]
  47 0008 0694     		str	r4, [sp, #24]
  48 000a 0794     		str	r4, [sp, #28]
  49 000c 0894     		str	r4, [sp, #32]
  50 000e 0994     		str	r4, [sp, #36]
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 118:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 118 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 118 3 view .LVU4
  54              		.loc 1 118 3 view .LVU5
ARM GAS  /tmp/ccroZnls.s 			page 4


  55 0010 354B     		ldr	r3, .L3
  56 0012 DA6C     		ldr	r2, [r3, #76]
  57 0014 42F00402 		orr	r2, r2, #4
  58 0018 DA64     		str	r2, [r3, #76]
  59              		.loc 1 118 3 view .LVU6
  60 001a DA6C     		ldr	r2, [r3, #76]
  61 001c 02F00402 		and	r2, r2, #4
  62 0020 0192     		str	r2, [sp, #4]
  63              		.loc 1 118 3 view .LVU7
  64 0022 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 118 3 view .LVU8
 119:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  67              		.loc 1 119 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 119 3 view .LVU10
  70              		.loc 1 119 3 view .LVU11
  71 0024 DA6C     		ldr	r2, [r3, #76]
  72 0026 42F02002 		orr	r2, r2, #32
  73 002a DA64     		str	r2, [r3, #76]
  74              		.loc 1 119 3 view .LVU12
  75 002c DA6C     		ldr	r2, [r3, #76]
  76 002e 02F02002 		and	r2, r2, #32
  77 0032 0292     		str	r2, [sp, #8]
  78              		.loc 1 119 3 view .LVU13
  79 0034 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 119 3 view .LVU14
 120:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 120 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 120 3 view .LVU16
  85              		.loc 1 120 3 view .LVU17
  86 0036 DA6C     		ldr	r2, [r3, #76]
  87 0038 42F00102 		orr	r2, r2, #1
  88 003c DA64     		str	r2, [r3, #76]
  89              		.loc 1 120 3 view .LVU18
  90 003e DA6C     		ldr	r2, [r3, #76]
  91 0040 02F00102 		and	r2, r2, #1
  92 0044 0392     		str	r2, [sp, #12]
  93              		.loc 1 120 3 view .LVU19
  94 0046 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 120 3 view .LVU20
 121:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97              		.loc 1 121 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 121 3 view .LVU22
 100              		.loc 1 121 3 view .LVU23
 101 0048 DA6C     		ldr	r2, [r3, #76]
 102 004a 42F00202 		orr	r2, r2, #2
 103 004e DA64     		str	r2, [r3, #76]
 104              		.loc 1 121 3 view .LVU24
 105 0050 DB6C     		ldr	r3, [r3, #76]
 106 0052 03F00203 		and	r3, r3, #2
 107 0056 0493     		str	r3, [sp, #16]
 108              		.loc 1 121 3 view .LVU25
ARM GAS  /tmp/ccroZnls.s 			page 5


 109 0058 049B     		ldr	r3, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 121 3 view .LVU26
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9, GPIO_PIN_RESET);
 112              		.loc 1 124 3 view .LVU27
 113 005a 2246     		mov	r2, r4
 114 005c 4FF43871 		mov	r1, #736
 115 0060 4FF09040 		mov	r0, #1207959552
 116 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL0:
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 118              		.loc 1 127 3 view .LVU28
 119 0068 204F     		ldr	r7, .L3+4
 120 006a 2246     		mov	r2, r4
 121 006c 8021     		movs	r1, #128
 122 006e 3846     		mov	r0, r7
 123 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL1:
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 125              		.loc 1 130 3 view .LVU29
 126 0074 1E4D     		ldr	r5, .L3+8
 127 0076 2246     		mov	r2, r4
 128 0078 4021     		movs	r1, #64
 129 007a 2846     		mov	r0, r5
 130 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL2:
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 133:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 132              		.loc 1 133 3 view .LVU30
 133              		.loc 1 133 23 is_stmt 0 view .LVU31
 134 0080 4FF40053 		mov	r3, #8192
 135 0084 0593     		str	r3, [sp, #20]
 134:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 134 3 is_stmt 1 view .LVU32
 137              		.loc 1 134 24 is_stmt 0 view .LVU33
 138 0086 0694     		str	r4, [sp, #24]
 135:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 139              		.loc 1 135 3 is_stmt 1 view .LVU34
 140              		.loc 1 135 24 is_stmt 0 view .LVU35
 141 0088 0223     		movs	r3, #2
 142 008a 0793     		str	r3, [sp, #28]
 136:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 143              		.loc 1 136 3 is_stmt 1 view .LVU36
 144 008c 05A9     		add	r1, sp, #20
 145 008e 3846     		mov	r0, r7
 146 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /*Configure GPIO pins : PA5 PA6 PA7 PA9 */
 139:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9;
ARM GAS  /tmp/ccroZnls.s 			page 6


 148              		.loc 1 139 3 view .LVU37
 149              		.loc 1 139 23 is_stmt 0 view .LVU38
 150 0094 4FF43873 		mov	r3, #736
 151 0098 0593     		str	r3, [sp, #20]
 140:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 140 3 is_stmt 1 view .LVU39
 153              		.loc 1 140 24 is_stmt 0 view .LVU40
 154 009a 0126     		movs	r6, #1
 155 009c 0696     		str	r6, [sp, #24]
 141:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 156              		.loc 1 141 3 is_stmt 1 view .LVU41
 157              		.loc 1 141 24 is_stmt 0 view .LVU42
 158 009e 0794     		str	r4, [sp, #28]
 142:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 159              		.loc 1 142 3 is_stmt 1 view .LVU43
 160              		.loc 1 142 25 is_stmt 0 view .LVU44
 161 00a0 0894     		str	r4, [sp, #32]
 143:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 162              		.loc 1 143 3 is_stmt 1 view .LVU45
 163 00a2 05A9     		add	r1, sp, #20
 164 00a4 4FF09040 		mov	r0, #1207959552
 165 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL4:
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /*Configure GPIO pin : PB10 */
 146:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 167              		.loc 1 146 3 view .LVU46
 168              		.loc 1 146 23 is_stmt 0 view .LVU47
 169 00ac 4FF48063 		mov	r3, #1024
 170 00b0 0593     		str	r3, [sp, #20]
 147:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 171              		.loc 1 147 3 is_stmt 1 view .LVU48
 172              		.loc 1 147 24 is_stmt 0 view .LVU49
 173 00b2 0694     		str	r4, [sp, #24]
 148:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 148 3 is_stmt 1 view .LVU50
 175              		.loc 1 148 24 is_stmt 0 view .LVU51
 176 00b4 0794     		str	r4, [sp, #28]
 149:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 177              		.loc 1 149 3 is_stmt 1 view .LVU52
 178 00b6 05A9     		add	r1, sp, #20
 179 00b8 2846     		mov	r0, r5
 180 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL5:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /*Configure GPIO pin : PC7 */
 152:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 182              		.loc 1 152 3 view .LVU53
 183              		.loc 1 152 23 is_stmt 0 view .LVU54
 184 00be 8023     		movs	r3, #128
 185 00c0 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 186              		.loc 1 153 3 is_stmt 1 view .LVU55
 187              		.loc 1 153 24 is_stmt 0 view .LVU56
 188 00c2 0696     		str	r6, [sp, #24]
 154:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 189              		.loc 1 154 3 is_stmt 1 view .LVU57
ARM GAS  /tmp/ccroZnls.s 			page 7


 190              		.loc 1 154 24 is_stmt 0 view .LVU58
 191 00c4 0794     		str	r4, [sp, #28]
 155:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 192              		.loc 1 155 3 is_stmt 1 view .LVU59
 193              		.loc 1 155 25 is_stmt 0 view .LVU60
 194 00c6 0894     		str	r4, [sp, #32]
 156:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 195              		.loc 1 156 3 is_stmt 1 view .LVU61
 196 00c8 05A9     		add	r1, sp, #20
 197 00ca 3846     		mov	r0, r7
 198 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL6:
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /*Configure GPIO pin : PB6 */
 159:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 200              		.loc 1 159 3 view .LVU62
 201              		.loc 1 159 23 is_stmt 0 view .LVU63
 202 00d0 4023     		movs	r3, #64
 203 00d2 0593     		str	r3, [sp, #20]
 160:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 204              		.loc 1 160 3 is_stmt 1 view .LVU64
 205              		.loc 1 160 24 is_stmt 0 view .LVU65
 206 00d4 0696     		str	r6, [sp, #24]
 161:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 161 3 is_stmt 1 view .LVU66
 208              		.loc 1 161 24 is_stmt 0 view .LVU67
 209 00d6 0794     		str	r4, [sp, #28]
 162:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 210              		.loc 1 162 3 is_stmt 1 view .LVU68
 211              		.loc 1 162 25 is_stmt 0 view .LVU69
 212 00d8 0894     		str	r4, [sp, #32]
 163:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213              		.loc 1 163 3 is_stmt 1 view .LVU70
 214 00da 05A9     		add	r1, sp, #20
 215 00dc 2846     		mov	r0, r5
 216 00de FFF7FEFF 		bl	HAL_GPIO_Init
 217              	.LVL7:
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** }
 218              		.loc 1 165 1 is_stmt 0 view .LVU71
 219 00e2 0BB0     		add	sp, sp, #44
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 20
 222              		@ sp needed
 223 00e4 F0BD     		pop	{r4, r5, r6, r7, pc}
 224              	.L4:
 225 00e6 00BF     		.align	2
 226              	.L3:
 227 00e8 00100240 		.word	1073876992
 228 00ec 00080048 		.word	1207961600
 229 00f0 00040048 		.word	1207960576
 230              		.cfi_endproc
 231              	.LFE134:
 233              		.section	.text.Error_Handler,"ax",%progbits
 234              		.align	1
 235              		.global	Error_Handler
 236              		.syntax unified
ARM GAS  /tmp/ccroZnls.s 			page 8


 237              		.thumb
 238              		.thumb_func
 240              	Error_Handler:
 241              	.LFB135:
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE END 4 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void Error_Handler(void)
 176:Core/Src/main.c **** {
 242              		.loc 1 176 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ Volatile: function does not return.
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 177:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 178:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 179:Core/Src/main.c ****   __disable_irq();
 248              		.loc 1 179 3 view .LVU73
 249              	.LBB8:
 250              	.LBI8:
 251              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccroZnls.s 			page 9


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/ccroZnls.s 			page 10


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  /tmp/ccroZnls.s 			page 11


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccroZnls.s 			page 12


 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 252              		.loc 2 207 27 view .LVU74
 253              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 254              		.loc 2 209 3 view .LVU75
 255              		.syntax unified
 256              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 257 0000 72B6     		cpsid i
 258              	@ 0 "" 2
 259              		.thumb
 260              		.syntax unified
 261              	.L6:
 262              	.LBE9:
 263              	.LBE8:
 180:Core/Src/main.c ****   while (1)
 264              		.loc 1 180 3 discriminator 1 view .LVU76
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****   }
 265              		.loc 1 182 3 discriminator 1 view .LVU77
 180:Core/Src/main.c ****   while (1)
 266              		.loc 1 180 9 discriminator 1 view .LVU78
 267 0002 FEE7     		b	.L6
 268              		.cfi_endproc
 269              	.LFE135:
 271              		.section	.text.SystemClock_Config,"ax",%progbits
 272              		.align	1
 273              		.global	SystemClock_Config
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	SystemClock_Config:
 279              	.LFB133:
  67:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280              		.loc 1 67 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 80
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI3:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 95B0     		sub	sp, sp, #84
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 88
  68:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 68 3 view .LVU80
  68:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 68 22 is_stmt 0 view .LVU81
 293 0004 3822     		movs	r2, #56
 294 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccroZnls.s 			page 13


 295 0008 06A8     		add	r0, sp, #24
 296 000a FFF7FEFF 		bl	memset
 297              	.LVL8:
  69:Core/Src/main.c **** 
 298              		.loc 1 69 3 is_stmt 1 view .LVU82
  69:Core/Src/main.c **** 
 299              		.loc 1 69 22 is_stmt 0 view .LVU83
 300 000e 0023     		movs	r3, #0
 301 0010 0193     		str	r3, [sp, #4]
 302 0012 0293     		str	r3, [sp, #8]
 303 0014 0393     		str	r3, [sp, #12]
 304 0016 0493     		str	r3, [sp, #16]
 305 0018 0593     		str	r3, [sp, #20]
  73:Core/Src/main.c **** 
 306              		.loc 1 73 3 is_stmt 1 view .LVU84
 307 001a 4FF40070 		mov	r0, #512
 308 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 309              	.LVL9:
  78:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 310              		.loc 1 78 3 view .LVU85
  78:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 311              		.loc 1 78 36 is_stmt 0 view .LVU86
 312 0022 0223     		movs	r3, #2
 313 0024 0693     		str	r3, [sp, #24]
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 314              		.loc 1 79 3 is_stmt 1 view .LVU87
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 315              		.loc 1 79 30 is_stmt 0 view .LVU88
 316 0026 4FF48072 		mov	r2, #256
 317 002a 0992     		str	r2, [sp, #36]
  80:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 318              		.loc 1 80 3 is_stmt 1 view .LVU89
  80:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 319              		.loc 1 80 41 is_stmt 0 view .LVU90
 320 002c 4022     		movs	r2, #64
 321 002e 0A92     		str	r2, [sp, #40]
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 322              		.loc 1 81 3 is_stmt 1 view .LVU91
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 323              		.loc 1 81 34 is_stmt 0 view .LVU92
 324 0030 0D93     		str	r3, [sp, #52]
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 325              		.loc 1 82 3 is_stmt 1 view .LVU93
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 326              		.loc 1 82 35 is_stmt 0 view .LVU94
 327 0032 0E93     		str	r3, [sp, #56]
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 328              		.loc 1 83 3 is_stmt 1 view .LVU95
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 25;
 329              		.loc 1 83 30 is_stmt 0 view .LVU96
 330 0034 0F93     		str	r3, [sp, #60]
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 331              		.loc 1 84 3 is_stmt 1 view .LVU97
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 332              		.loc 1 84 30 is_stmt 0 view .LVU98
 333 0036 1922     		movs	r2, #25
 334 0038 1092     		str	r2, [sp, #64]
ARM GAS  /tmp/ccroZnls.s 			page 14


  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 335              		.loc 1 85 3 is_stmt 1 view .LVU99
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 336              		.loc 1 85 30 is_stmt 0 view .LVU100
 337 003a 1193     		str	r3, [sp, #68]
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 338              		.loc 1 86 3 is_stmt 1 view .LVU101
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 339              		.loc 1 86 30 is_stmt 0 view .LVU102
 340 003c 1293     		str	r3, [sp, #72]
  87:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 341              		.loc 1 87 3 is_stmt 1 view .LVU103
  87:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 342              		.loc 1 87 30 is_stmt 0 view .LVU104
 343 003e 1393     		str	r3, [sp, #76]
  88:Core/Src/main.c ****   {
 344              		.loc 1 88 3 is_stmt 1 view .LVU105
  88:Core/Src/main.c ****   {
 345              		.loc 1 88 7 is_stmt 0 view .LVU106
 346 0040 06A8     		add	r0, sp, #24
 347 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 348              	.LVL10:
  88:Core/Src/main.c ****   {
 349              		.loc 1 88 6 view .LVU107
 350 0046 70B9     		cbnz	r0, .L11
  95:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 351              		.loc 1 95 3 is_stmt 1 view .LVU108
  95:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 352              		.loc 1 95 31 is_stmt 0 view .LVU109
 353 0048 0F23     		movs	r3, #15
 354 004a 0193     		str	r3, [sp, #4]
  97:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 355              		.loc 1 97 3 is_stmt 1 view .LVU110
  97:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356              		.loc 1 97 34 is_stmt 0 view .LVU111
 357 004c 0321     		movs	r1, #3
 358 004e 0291     		str	r1, [sp, #8]
  98:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 359              		.loc 1 98 3 is_stmt 1 view .LVU112
  98:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 360              		.loc 1 98 35 is_stmt 0 view .LVU113
 361 0050 0023     		movs	r3, #0
 362 0052 0393     		str	r3, [sp, #12]
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 363              		.loc 1 99 3 is_stmt 1 view .LVU114
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 99 36 is_stmt 0 view .LVU115
 365 0054 0493     		str	r3, [sp, #16]
 100:Core/Src/main.c **** 
 366              		.loc 1 100 3 is_stmt 1 view .LVU116
 100:Core/Src/main.c **** 
 367              		.loc 1 100 36 is_stmt 0 view .LVU117
 368 0056 0593     		str	r3, [sp, #20]
 102:Core/Src/main.c ****   {
 369              		.loc 1 102 3 is_stmt 1 view .LVU118
 102:Core/Src/main.c ****   {
 370              		.loc 1 102 7 is_stmt 0 view .LVU119
ARM GAS  /tmp/ccroZnls.s 			page 15


 371 0058 01A8     		add	r0, sp, #4
 372 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 373              	.LVL11:
 102:Core/Src/main.c ****   {
 374              		.loc 1 102 6 view .LVU120
 375 005e 20B9     		cbnz	r0, .L12
 106:Core/Src/main.c **** 
 376              		.loc 1 106 1 view .LVU121
 377 0060 15B0     		add	sp, sp, #84
 378              	.LCFI5:
 379              		.cfi_remember_state
 380              		.cfi_def_cfa_offset 4
 381              		@ sp needed
 382 0062 5DF804FB 		ldr	pc, [sp], #4
 383              	.L11:
 384              	.LCFI6:
 385              		.cfi_restore_state
  90:Core/Src/main.c ****   }
 386              		.loc 1 90 5 is_stmt 1 view .LVU122
 387 0066 FFF7FEFF 		bl	Error_Handler
 388              	.LVL12:
 389              	.L12:
 104:Core/Src/main.c ****   }
 390              		.loc 1 104 5 view .LVU123
 391 006a FFF7FEFF 		bl	Error_Handler
 392              	.LVL13:
 393              		.cfi_endproc
 394              	.LFE133:
 396              		.section	.text.main,"ax",%progbits
 397              		.align	1
 398              		.global	main
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	main:
 404              	.LFB132:
  29:Core/Src/main.c **** 
 405              		.loc 1 29 16 view -0
 406              		.cfi_startproc
 407              		@ Volatile: function does not return.
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
  31:Core/Src/main.c ****   SystemClock_Config();
 415              		.loc 1 31 3 view .LVU125
 416 0002 FFF7FEFF 		bl	HAL_Init
 417              	.LVL14:
  32:Core/Src/main.c ****   MX_GPIO_Init();
 418              		.loc 1 32 3 view .LVU126
 419 0006 FFF7FEFF 		bl	SystemClock_Config
 420              	.LVL15:
  33:Core/Src/main.c **** 
 421              		.loc 1 33 3 view .LVU127
ARM GAS  /tmp/ccroZnls.s 			page 16


 422 000a FFF7FEFF 		bl	MX_GPIO_Init
 423              	.LVL16:
 424              	.L14:
  35:Core/Src/main.c ****   {
 425              		.loc 1 35 3 discriminator 1 view .LVU128
  55:Core/Src/main.c ****  HAL_Delay(200);
 426              		.loc 1 55 2 discriminator 1 view .LVU129
 427 000e 2021     		movs	r1, #32
 428 0010 4FF09040 		mov	r0, #1207959552
 429 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 430              	.LVL17:
  56:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 431              		.loc 1 56 2 discriminator 1 view .LVU130
 432 0018 C820     		movs	r0, #200
 433 001a FFF7FEFF 		bl	HAL_Delay
 434              	.LVL18:
  35:Core/Src/main.c ****   {
 435              		.loc 1 35 9 discriminator 1 view .LVU131
 436 001e F6E7     		b	.L14
 437              		.cfi_endproc
 438              	.LFE132:
 440              		.global	g_debounce_count
 441              		.section	.data.g_debounce_count,"aw"
 442              		.align	1
 445              	g_debounce_count:
 446 0000 6400     		.short	100
 447              		.global	g_count
 448              		.section	.bss.g_count,"aw",%nobits
 451              	g_count:
 452 0000 00       		.space	1
 453              		.global	g_current_state
 454              		.section	.bss.g_current_state,"aw",%nobits
 457              	g_current_state:
 458 0000 00       		.space	1
 459              		.global	g_status
 460              		.section	.bss.g_status,"aw",%nobits
 463              	g_status:
 464 0000 00       		.space	1
 465              		.text
 466              	.Letext0:
 467              		.file 3 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/machine/_default_ty
 468              		.file 4 "/home/phuccd/xpack-arm-none-eabi-gcc-12.2.1-1.2/arm-none-eabi/include/sys/_stdint.h"
 469              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 470              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 471              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 472              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 473              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 474              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 475              		.file 11 "<built-in>"
ARM GAS  /tmp/ccroZnls.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccroZnls.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccroZnls.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccroZnls.s:227    .text.MX_GPIO_Init:000000e8 $d
     /tmp/ccroZnls.s:234    .text.Error_Handler:00000000 $t
     /tmp/ccroZnls.s:240    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccroZnls.s:272    .text.SystemClock_Config:00000000 $t
     /tmp/ccroZnls.s:278    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccroZnls.s:397    .text.main:00000000 $t
     /tmp/ccroZnls.s:403    .text.main:00000000 main
     /tmp/ccroZnls.s:445    .data.g_debounce_count:00000000 g_debounce_count
     /tmp/ccroZnls.s:442    .data.g_debounce_count:00000000 $d
     /tmp/ccroZnls.s:451    .bss.g_count:00000000 g_count
     /tmp/ccroZnls.s:452    .bss.g_count:00000000 $d
     /tmp/ccroZnls.s:457    .bss.g_current_state:00000000 g_current_state
     /tmp/ccroZnls.s:458    .bss.g_current_state:00000000 $d
     /tmp/ccroZnls.s:463    .bss.g_status:00000000 g_status
     /tmp/ccroZnls.s:464    .bss.g_status:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
